name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main
      - feat/backend-operation

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      APPLICATION_NAME: "motive-backend"
      ENVIRONMENT_NAME: "Motive-backend-env"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Ensure Docker Compose is available
        run: |
          docker --version
          docker compose version

      - name: Build Docker images
        run: docker compose build


      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Set executable permission for gradlew
        run: chmod +x gradlew

      - name: Install Elastic Beanstalk CLI
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install awsebcli --upgrade

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set Environment Variables
        run: |
          export SPRING_APP_NAME=${{ secrets.SPRING_APP_NAME }}
          export DATABASE_URL=${{ secrets.DATABASE_URL }}
          export MARIA_DATABASE_PORT=${{ secrets.MARIA_DATABASE_PORT }}
          export MARIA_DATABASE_NAME=${{ secrets.MARIA_DATABASE_NAME }}
          export DB_USERNAME=${{ secrets.DB_USERNAME }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export REDIS_HOST=${{ secrets.REDIS_HOST }}
          export REDIS_PORT=${{ secrets.REDIS_PORT }}
          export SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}
          export SECRET_KEY=${{ secrets.SECRET_KEY }}
          export JWT_SECRET_DEFAULT_VALUE=${{ secrets.JWT_SECRET_DEFAULT_VALUE }}
          export JWT_HEADER=${{ secrets.JWT_HEADER }}

      # Gradle 빌드
      - name: Build and package the application
        run: ./gradlew clean build -x test



      # Elastic Beanstalk 배포
      - name: Deploy to Elastic Beanstalk
        run: |
          eb init -p "Docker" ${{ env.APPLICATION_NAME }} --region ${{ env.AWS_REGION }}
          eb use ${{ env.ENVIRONMENT_NAME }}
          eb deploy --staged